name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run TypeScript compilation check
      run: npm run compile

    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true

    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build extension
      run: npm run compile

    - name: Package extension
      run: npm run package

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dom-agent-extension
        path: |
          *.vsix
          out/
        retention-days: 30

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dom-agent-extension

    - name: Publish to Visual Studio Marketplace
      if: github.event_name == 'release'
      run: npx vsce publish --pat ${{ secrets.VSCE_PAT }}
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}

    - name: Publish to Open VSX Registry
      if: github.event_name == 'release'
      run: npx ovsx publish --pat ${{ secrets.OVSX_PAT }}
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}
